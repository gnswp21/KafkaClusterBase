services:
  zoo1:
    image: zookeeper
    restart: always
    hostname: zoo1
    container_name: zoo1
    ports:
      - 12181:2181
#    volumes:
#      - zookeeper_data_1:/data
    networks:
      KafkaClusterPractice:
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181

  zoo2:
    image: zookeeper
    restart: always
    hostname: zoo2
    container_name: zoo2
    ports:
      - 22181:2181
#    volumes:
#      - zookeeper_data_2:/data\
    networks:
      KafkaClusterPractice:
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181

  zoo3:
    image: zookeeper
    restart: always
    hostname: zoo3
    container_name: zoo3
    ports:
      - 32181:2181
#    volumes:
#      - zookeeper_data_3:/data
    networks:
      KafkaClusterPractice:
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181


  mykafka1:
    image: mykafka
    hostname: mykafka1
    container_name: mykafka1
    networks:
      KafkaClusterPractice:
    ports:
      - 19094:19094
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS INTERNAL://mykafka1:9092,EXTERNAL://mykafka1:19094
      - KAFKA_ADVERTISED_LISTENERS=INTERNAL://mykafka1:9092,EXTERNAL://localhost:19094
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_ZOOKEEPER_CONNECT=zoo1:2181,zoo2:2181,zoo3:2181
      - KAFKA_LOG_DIRS=/root/kafka/data
    depends_on:
      - zoo1
      - zoo2
      - zoo3
    command:
      - "tail -f /dev/null"

#  mykafka2:
#    image: mykafka
#    hostname: mykafka2
#    container_name: mykafka2
#    networks:
#      KafkaClusterPractice:
#    ports:
#      - 29094:29094
#    environment:
#      KAFKA_LISTENERS: INTERNAL://mykafka2:9092,EXTERNAL://mykafka2:29094
#      KAFKA_ADVERTISED_LISTENERS: INTERNAL://mykafka2:9092,EXTERNAL://localhost:29094
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
#      KAFKA_ZOOKEEPER_CONNECT: zoo1:2181,zoo2:2181,zoo3:2181
#      KAFKA_LOG_DIRS: /root/kafka/data
#      KAFKA_BROKER_ID: 2
#    volumes:
#      - kafka_data_2:/root/kafka/data
#      - kafka_log_2:/root/kafka/logs
#    depends_on:
#      - zoo1
#      - zoo2
#      - zoo3
#  mykafka3:
#    image: mykafka
#    hostname: mykafka3
#    container_name: mykafka3
#    networks:
#      KafkaClusterPractice:
#    ports:
#      - 39094:39094
#    environment:
#      KAFKA_LISTENERS: INTERNAL://mykafka3:9092,EXTERNAL://mykafka3:39094
#      KAFKA_ADVERTISED_LISTENERS: INTERNAL://mykafka3:9092,EXTERNAL://localhost:39094
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
#      KAFKA_ZOOKEEPER_CONNECT: zoo1:2181,zoo2:2181,zoo3:2181
#      KAFKA_LOG_DIRS: /root/kafka/data
#      KAFKA_BROKER_ID: 3
#    volumes:
#      - kafka_data_3:/root/kafka/data
#      - kafka_log_3:/root/kafka/logs
#    depends_on:
#      - zoo1
#      - zoo2
#      - zoo3

volumes:
  zookeeper_data_1:
  kafka_data_1:
  kafka_log_1:
  zookeeper_data_2:
  kafka_data_2:
  kafka_log_2:
  zookeeper_data_3:
  kafka_data_3:
  kafka_log_3:


networks:
  KafkaClusterPractice: